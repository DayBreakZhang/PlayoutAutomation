<UserControl Language="{UICulture}" ResxExtension.DefaultResxName="TAS.Client.Views.MediaSearchView"
        x:Class="TAS.Client.Views.MediaSearchView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:common="clr-namespace:TAS.Client.Common;assembly=TAS.Client.Common"
        xmlns:controls="clr-namespace:TAS.Client.Common.Controls;assembly=TAS.Client.Common"
        xmlns:vm="clr-namespace:TAS.Client.ViewModels"
        xmlns:views="clr-namespace:TAS.Client.Views"
        d:DataContext="{x:Type vm:MediaSearchViewmodel}"
        Height="400"
        mc:Ignorable="d" 
        SnapsToDevicePixels="True"
        FontSize="12"
        >
    <UserControl.Resources>
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <ControlTemplate x:Key="ToggleButtonTemplate" TargetType="ToggleButton">
            <Grid
            Width="15"
            Height="13"
            Background="Transparent">
                <Path x:Name="ExpandPath"
              HorizontalAlignment="Left" 
              VerticalAlignment="Center" 
              Margin="1,1,1,1"
              Fill="{StaticResource GlyphBrush}"
              Data="M 4 0 L 8 4 L 4 8 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked"
                 Value="True">
                    <Setter Property="Data"
                  TargetName="ExpandPath"
                  Value="M 0 4 L 8 4 L 4 8 Z"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Template" Value="{StaticResource ToggleButtonTemplate}" />
        </Style>
    </UserControl.Resources>
    <Grid Width="Auto">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="180" />
                <ColumnDefinition Width="160" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="{Resx _search}" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <TextBox Name="TbSearch" Grid.Column="1" VerticalAlignment="Center" Text="{Binding SearchText, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" PreviewKeyDown="tbSearch_KeyDown" >
                <i:Interaction.Behaviors>
                    <common:FocusExtension SelectAllOnFocus="True"/>
                </i:Interaction.Behaviors>
            </TextBox>
            <Button Grid.Column="4" HorizontalAlignment="Right" Content="{Binding OkButtonText}" Margin="5,4" Width="70" Command="{Binding CommandAdd}" Click="ButtonOKClick"  IsDefault="True" />
            <Button Grid.Column="4" HorizontalAlignment="Left" Margin="5,4" Width="70" Style="{StaticResource CancelButtonStyle}"/>
            <ComboBox Grid.Column="3" Margin="5,3" VerticalAlignment="Center" ItemsSource="{Binding MediaCategories}" SelectedValue="{Binding MediaCategory}" Visibility="{Binding IsMovie, Converter={StaticResource BoolToVis}}" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Width="13" Style="{StaticResource MediaCategoryImage}"/>
                            <TextBlock Margin="2, 0, 0, 0" Text="{Binding}"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ContentControl Grid.Column="1"  Width="330" Visibility="{Binding IsMovie, Converter={StaticResource BoolToVis}}" >
                <views:PreviewView DataContext="{Binding PreviewViewmodel}"/>
            </ContentControl>
            <DockPanel Grid.Column="0">
                <CheckBox DockPanel.Dock="Top" HorizontalAlignment="Left" Margin="5" IsChecked="{Binding EnableCGElementsForNewEvents}" Content="{Resx _enableCGForNewEvents}" Visibility="{Binding CanEnableCGElements, Converter={StaticResource BoolToVis}}"/>
                <DataGrid  
                x:Name="gSearch" 
                SelectionUnit="FullRow" 
                SelectionMode="Single" 
                AutoGenerateColumns="False" 
                ColumnWidth="Auto"
                ItemsSource="{Binding Items}" 
                SelectedItem="{Binding SelectedItem, Mode=TwoWay}" 
                SelectionChanged="DataGrid_SelectionChanged" 
                IsReadOnly="True"
                RowHeaderWidth="0">
                    <DataGrid.Resources>
                        <common:BindingProxy x:Key="proxy" Data="{Binding}"/>
                    </DataGrid.Resources>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="DetailsVisibility" Value="{Binding IsExpanded, Converter={StaticResource BoolToVis}}" />
                            <Setter Property="common:MouseDoubleClick.Command" Value="{Binding ElementName=gSearch, Path=DataContext.CommandAdd}" />
                            <Setter Property="Background" Value="{Binding MediaEmphasis, Converter={StaticResource MediaEmphasisToBrush}}" />
                            <EventSetter Event="MouseDoubleClick" Handler="ButtonOKClick"/>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn x:Name="toggleColumn" CanUserResize="False" Width="20" Visibility="{Binding Data.IsServerOrArchiveDirectory, Source={StaticResource proxy}, Converter={StaticResource BoolToVis}}" SortMemberPath="HasSegments">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ToggleButton Visibility="{Binding HasSegments, Converter={StaticResource BoolToVis}}" IsChecked="{Binding IsExpanded, UpdateSourceTrigger=PropertyChanged}" Width="14" Height="14" Style="{StaticResource ToggleButtonStyle}"  />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:Name="isTrimmedColumn" Width="20" CanUserResize="False" Visibility="{Binding Data.IsMovie, Source={StaticResource proxy}, Converter={StaticResource BoolToVis}}" SortMemberPath="IsTrimmed">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image x:Name="trimmedImage" Height="16" />
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsTrimmed}" Value="True">
                                            <Setter Property="Source" TargetName="trimmedImage" Value="/TAS.Client.Common;component/Images/Indicators/scizors.png" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="10" x:Name="categoryColumn" CanUserResize="False" Visibility="{Binding Data.IsServerOrArchiveDirectory, Source={StaticResource proxy}, Converter={StaticResource BoolToVis}}" SortMemberPath="MediaCategory">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image DataContext="{Binding MediaCategory}" Style="{StaticResource MediaCategoryImage}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:Name="clipNameColumn" Header="{Resx ResxName=TAS.Client.Views.MediaSearchView, Key=_grid.Header.ClipName}" Width="3*" SortMemberPath="MediaName" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding MediaName, Mode=OneWay}" ToolTip="{Binding FileName, Mode=OneWay}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn x:Name="ingestDateColumn" Header="{Resx ResxName=TAS.Client.Views.MediaSearchView, Key=_grid.Header.IngestDate}" Binding="{Binding LastUpdated, StringFormat=g, Mode=OneWay}" />
                        <DataGridTemplateColumn x:Name="durationColumn" Header="{Resx ResxName=TAS.Client.Views.MediaSearchView, Key=_grid.Header.Duration}" Visibility="{Binding Data.IsMovie, Source={StaticResource proxy}, Converter={StaticResource BoolToVis}}" SortMemberPath="DurationPlay">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <controls:TimecodeTextBlock Timecode="{Binding DurationPlay}" VideoFormat="{Binding VideoFormat}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <DataGrid.RowDetailsTemplate >
                        <DataTemplate>
                            <ListView ItemsSource="{Binding MediaSegments}" SelectionMode="Single" SelectedItem="{Binding SelectedSegment}" Background="#FFE0EFFF" BorderThickness="0" SelectionChanged="ListView_SelectionChanged">
                                <ListView.View>
                                    <GridView >
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>
                                        <GridViewColumn Width="{Binding ElementName=toggleColumn, Path=ActualWidth}" >
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate />
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding ElementName=categoryColumn, Path=ActualWidth}" >
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate />
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding ElementName=isTrimmedColumn, Path=ActualWidth}"  >
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate />
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn DisplayMemberBinding="{Binding SegmentName, Mode=OneWay}" Width="{Binding ElementName=clipNameColumn, Path=ActualWidth}" TextBlock.TextAlignment="Left" />
                                        <GridViewColumn Width="{Binding ElementName=ingestDateColumn, Path=ActualWidth}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate />
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding ElementName=durationColumn, Path=ActualWidth}" >
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <controls:TimecodeTextBlock TextAlignment="Left" Timecode="{Binding Duration}" VideoFormat="{Binding VideoFormat}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>
                </DataGrid>
            </DockPanel>
        </Grid>
    </Grid>
</UserControl>
