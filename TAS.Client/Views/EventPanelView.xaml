<UserControl ResxExtension.DefaultResxName="TAS.Client.Views.EventPanelView" Language="{UICulture}" 
             x:Class="TAS.Client.Views.EventPanelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=System"
             xmlns:c="clr-namespace:TAS.Client"
             xmlns:vm="clr-namespace:TAS.Client.ViewModels"
             xmlns:common="clr-namespace:TAS.Client.Common;assembly=TAS.Client.Common"
             mc:Ignorable="d" 
             d:DataContext="{x:Type vm:EventPanelViewmodel}"
             FontSize="12" 
             DataContextChanged="UserControl_DataContextChanged" 
             d:DesignWidth="700"
             >
    <UserControl.Resources>
        <Style x:Key="borderStyle" TargetType="{x:Type Border}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="Background" Value="RoyalBlue" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="bigImage" TargetType="{x:Type Image}">
            <Setter Property="Width" Value="28" />
            <Setter Property="Height" Value="28" />
            <Setter Property="Margin" Value="1,0,0,0" />
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>
    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Copy}" Command="{Binding CommandCopy}" />
            <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Cut}" Command="{Binding CommandCut}"/>
            <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Paste}">
                <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Paste.Before}" Command="{Binding CommandPaste}" CommandParameter="Before" />
                <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Paste.After}" Command="{Binding CommandPaste}" CommandParameter="After" />
                <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Paste.Under}" Command="{Binding CommandPaste}" CommandParameter="Under" />
            </MenuItem>
            <Separator/>
            <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Hide}" Command="{Binding CommandHide}" InputGestureText="F9" Visibility="{Binding IsRootContainer, Converter={StaticResource BoolToVis}}"/>
        </ContextMenu>
    </UserControl.ContextMenu>
    <Border x:Name="border" Style="{StaticResource borderStyle}" BorderThickness="0, 0, 0, 1" Margin="0" BorderBrush="Gray" >
        <StackPanel>
            <Border Background="#FFEBBDA0" Height="15" Visibility="{Binding IsStartEvent,  Converter={StaticResource BoolToVis}}">
                <TextBlock Text="{Resx _blockBegin}" FontSize="10" Margin="50, 0" />
            </Border>
            <StackPanel Opacity="{Binding IsEnabled, Converter={StaticResource EnabledToOpacity}}" >
            <Border Background="OrangeRed" Height="6" Visibility="{Binding IsHold,  Converter={StaticResource BoolToVis}}" />
                <Grid Height="59" Background="{Binding IsPlaying, Converter={StaticResource BoolToBrush}, ConverterParameter=#4040FF00}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="33" />
                        <ColumnDefinition Width="33" />
                        <ColumnDefinition Width="33" />
                        <ColumnDefinition Width="0" />
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="7*" />
                        <RowDefinition Height="4*" />
                    </Grid.RowDefinitions>
                    <!--<Border Grid.RowSpan="2" Grid.ColumnSpan="9" BorderThickness="1" BorderBrush="Red" Visibility="{Binding IsCut, Converter={StaticResource BoolToVis}}" SnapsToDevicePixels="True"/>
                    <Border Grid.RowSpan="2" Grid.ColumnSpan="9" BorderThickness="1" BorderBrush="Green" Visibility="{Binding IsCopy, Converter={StaticResource BoolToVis}}" SnapsToDevicePixels="True"/>-->
                    <Grid Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="3" >
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MediaCategory}" Value="Show">
                                        <Setter Property="Background" Value="PaleGreen" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding MediaCategory}" Value="Commercial">
                                        <Setter Property="Background" Value="Tomato" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15" />
                            <RowDefinition />
                            <RowDefinition Height="15" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.RowSpan="3" Grid.Column="1" Background="{Binding MediaEmphasis, Converter={StaticResource MediaEmphasisToBrush}}"/>
                        <Image Grid.Row="1" Grid.Column="1" ToolTip="{Binding EventType}">
                            <Image.Style>
                                <Style BasedOn="{StaticResource bigImage}" TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EventType}" Value="Rundown">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/EventTypes/Rundown.gif" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding EventType}" Value="Movie">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/EventTypes/Movie.png" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding EventType}" Value="Live">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/EventTypes/Live.png" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding EventType}" Value="StillImage">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/EventTypes/StillImage.png" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding EventType}" Value="Container">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/EventTypes/Container.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image Grid.Row="2" Grid.Column="1" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding VideoFormat}" Value="PAL_FHA">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/VideoFormats/FHA.png" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding VideoFormat}" Value="Other">
                                            <Setter Property="Source" Value="{x:Null}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding VideoFormat}" Value="HD1080i5000">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/VideoFormats/HD.png" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding VideoFormat}" Value="HD1080p2500">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/VideoFormats/HD.png" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding VideoFormat}" Value="PAL">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/VideoFormats/4-3.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Border Grid.Column="0" Grid.RowSpan="3" Background="Red" Visibility="{Binding IsInvalidInSchedule, Converter={StaticResource BoolToVis}}" ToolTip="{Resx _isInvalidInSchedule}" />
                        <Image Grid.Column="0" Grid.Row="0" Source="/TAS.Client.Common;component/Images/Indicators/tick_circle.png" HorizontalAlignment="Left" Stretch="None" Visibility="{Binding IsMultiSelected, Converter={StaticResource BoolToVis}}" ToolTip="{Resx _isSelected}" />
                        <Image Grid.Column="0" Grid.Row="1" ToolTip="{Binding MediaErrorInfo}" HorizontalAlignment="Left" Margin="3,1,0,0" >
                            <Image.Style>
                                <Style TargetType="Image" BasedOn="{StaticResource bigImage}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MediaErrorInfo}" Value="Missing">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/MediaErrorInfo/Missing.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MediaErrorInfo}" Value="TooShort">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/MediaErrorInfo/TooShort.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MediaErrorInfo}" Value="NoError">
                                            <Setter Property="Source" Value="{x:Null}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Image Grid.Column="2" Grid.Row="1" ToolTip="{Binding PlayState}">
                            <Image.Style>
                                <Style TargetType="Image" BasedOn="{StaticResource bigImage}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PlayState}" Value="Played">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/PlayStates/Played.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PlayState}" Value="Playing">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/PlayStates/Playing.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PlayState}" Value="Paused">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/PlayStates/Paused.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PlayState}" Value="Aborted">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/PlayStates/Aborted.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PlayState}" Value="Fading">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/PlayStates/Fading.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PlayState}" Value="Scheduled">
                                            <Setter Property="Source" Value="{x:Null}"/>
                                        </DataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                    <StackPanel Grid.Column="4" Grid.RowSpan="2" Visibility="{Binding IsNotContainer, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="{Binding ScheduledTime}" FontWeight="SemiBold" />
                        <TextBlock Text="{Binding Offset, Converter={StaticResource TimeSpanToSignedString}}" FontWeight="SemiBold" Foreground="DarkGreen" Visibility="{Binding OffsetVisible, Converter={StaticResource BoolToVis}}" />
                        <TextBlock Text="{Binding Duration}" FontWeight="SemiBold" />
                        <TextBlock Text="{Binding EndTime}" Visibility="{Binding IsLoop, Converter={StaticResource InvertedBoolToVis}}"  FontWeight="Bold" />
                        <Image Height="14" Source="/TAS.Client.Common;component/Images/Indicators/loop.png" Stretch="Uniform" Visibility="{Binding IsLoop, Converter={StaticResource BoolToVis}}" />
                    </StackPanel>
                    <TextBlock Grid.Column="5" Grid.Row="0" Text="{Binding EventName}" FontSize="22" VerticalAlignment="Center" Margin="5, 0">
                        <TextBlock.ToolTip>
                            <TextBlock Text="{Binding RootOwnerName, StringFormat={Resx _eventName.ToolTip, ResxName=TAS.Client.Views.EventPanelView}}" />
                        </TextBlock.ToolTip>
                    </TextBlock>
                    <!--<TextBlock Grid.Column="3" Grid.Row="1" Text="{Binding NextEventname}" VerticalAlignment="Center"  HorizontalAlignment="Stretch" />-->

                    <TextBlock Grid.Column="6" Text="{Binding TimeLeft}" FontSize="26" VerticalAlignment="Center" Margin="5, 0" />
                    <DockPanel Grid.Column="5" Grid.Row="1" Grid.ColumnSpan="2" FlowDirection="RightToLeft" Margin="5, 0" >
                        <StackPanel FlowDirection="LeftToRight" Orientation="Horizontal" Visibility="{Binding GPICanTrigger, Converter={StaticResource BoolToVis}}">
                            <Image Width="20" Margin="1">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding GPIParental}" Value="None">
                                                <Setter Property="Source" Value="{x:Null}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding GPIParental}" Value="NoLimit">
                                                <Setter Property="Source" Value="/TAS.Client.Common;component/Images/Parentals/BO.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding GPIParental}" Value="Limit07">
                                                <Setter Property="Source" Value="/TAS.Client.Common;component/Images/Parentals/7.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding GPIParental}" Value="Limit12">
                                                <Setter Property="Source" Value="/TAS.Client.Common;component/Images/Parentals/12.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding GPIParental}" Value="Limit16">
                                                <Setter Property="Source" Value="/TAS.Client.Common;component/Images/Parentals/16.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding GPIParental}" Value="Limit18">
                                                <Setter Property="Source" Value="/TAS.Client.Common;component/Images/Parentals/18.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock TextAlignment="Center" VerticalAlignment="Center" Width="60" Text="{Binding GPILogo}"/>
                            <TextBlock TextAlignment="Center" VerticalAlignment="Center" Width="60" Text="{Binding GPICrawl}"/>
                        </StackPanel>
                        <TextBlock Text="{Binding Layer3SubItemMediaName}" Margin="3, 0" VerticalAlignment="Center" />
                        <Image Source="/TAS.Client.Common;component/Images/Layers/Layer3.png" Visibility="{Binding HasSubItemOnLayer3, Converter={StaticResource BoolToVis}}"/>
                        <TextBlock Text="{Binding Layer2SubItemMediaName}" Margin="3, 0" VerticalAlignment="Center" />
                        <Image Source="/TAS.Client.Common;component/Images/Layers/Layer2.png" Visibility="{Binding HasSubItemOnLayer2, Converter={StaticResource BoolToVis}}"/>
                        <TextBlock Text="{Binding Layer1SubItemMediaName}" Margin="3, 0" VerticalAlignment="Center" />
                        <Image Source="/TAS.Client.Common;component/Images/Layers/Layer1.png" Visibility="{Binding HasSubItemOnLayer1, Converter={StaticResource BoolToVis}}"/>
                        <TextBlock Grid.Column="5" Grid.Row="1" Text="{Binding MediaFileName}" VerticalAlignment="Center" HorizontalAlignment="Right" FlowDirection="LeftToRight" />
                        <!--<TextBlock Width="90" Text="{Binding IdRundownEvent}" HorizontalAlignment="Right"/>-->
                    </DockPanel>
                </Grid>
            </StackPanel>
        </StackPanel>
    </Border>
</UserControl>
