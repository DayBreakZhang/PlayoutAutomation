<local:EventPanelView ResxExtension.DefaultResxName="TAS.Client.Views.EventPanelView" Language="{UICulture}" 
             x:Class="TAS.Client.Views.EventPanelRundownView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=System"
             xmlns:c="clr-namespace:TAS.Client"
             xmlns:local="clr-namespace:TAS.Client.Views"
             xmlns:vm="clr-namespace:TAS.Client.ViewModels"
             xmlns:common="clr-namespace:TAS.Client.Common;assembly=TAS.Client.Common"
             mc:Ignorable="d" 
             d:DataContext="{x:Type vm:EventPanelRundownViewmodel}"
             FontSize="12" 
             d:DesignWidth="700"
             common:TreeViewExtensions.IsSelected="{Binding IsMultiSelected, Mode=TwoWay}"
             >
    <local:EventPanelView.Resources>
        <Style x:Key="borderStyle" TargetType="{x:Type Border}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="Background" Value="RoyalBlue" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </local:EventPanelView.Resources>
    <local:EventPanelView.ContextMenu>
        <ContextMenu>
            <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Copy}" Command="{Binding CommandCopy}" />
            <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Cut}" Command="{Binding CommandCut}"/>
            <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Paste}">
                <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Paste.Before}" Command="{Binding CommandPaste}" CommandParameter="Before" />
                <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Paste.After}" Command="{Binding CommandPaste}" CommandParameter="After" />
                <MenuItem Header="{Resx ResxName=TAS.Client.Views.EventPanelView, Key=_popupMenu.Paste.Under}" Command="{Binding CommandPaste}" CommandParameter="Under" />
            </MenuItem>
        </ContextMenu>
    </local:EventPanelView.ContextMenu>
    <Border x:Name="border" Style="{StaticResource borderStyle}" BorderThickness="0, 0, 0, 1" Margin="0" BorderBrush="Gray" >
        <StackPanel>
            <Border Background="#FFEBBDA0" Height="15" Visibility="{Binding IsStartEvent,  Converter={StaticResource BoolToVis}}">
                <TextBlock Text="{Resx _blockBegin}" FontSize="10" Margin="50, 0" />
            </Border>
            <StackPanel Opacity="{Binding IsEnabled, Converter={StaticResource EnabledToOpacity}}" >
                <Border Background="OrangeRed" Height="6" Visibility="{Binding IsHold,  Converter={StaticResource BoolToVis}}" />
                <Grid Height="59" Background="{Binding IsPlaying, Converter={StaticResource BoolToBrush}, ConverterParameter=#4040FF00}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="33" />
                        <ColumnDefinition Width="33" />
                        <ColumnDefinition Width="33" />
                        <ColumnDefinition Width="0" />
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="7*" />
                        <RowDefinition Height="4*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="3" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15" />
                            <RowDefinition />
                            <RowDefinition Height="15" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Row="1" Grid.Column="1" ToolTip="{Binding Event.EventType}" Source="/TAS.Client.Common;component/Images/EventTypes/Rundown.gif"/>
                        <Border Grid.Column="0" Grid.RowSpan="3" Background="Red" Visibility="{Binding IsInvalidInSchedule, Converter={StaticResource BoolToVis}}" ToolTip="{Resx _isInvalidInSchedule}" />
                        <Image Grid.Column="0" Grid.Row="0" Source="/TAS.Client.Common;component/Images/Indicators/tick_circle.png" HorizontalAlignment="Left" Stretch="None" Visibility="{Binding IsMultiSelected, Converter={StaticResource BoolToVis}}" ToolTip="{Resx _isSelected}" />
                        <Image Grid.Column="2" Grid.Row="1" ToolTip="{Binding PlayState}">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PlayState}" Value="Played">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/PlayStates/Played.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PlayState}" Value="Playing">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/PlayStates/Playing.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PlayState}" Value="Paused">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/PlayStates/Paused.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PlayState}" Value="Aborted">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/PlayStates/Aborted.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PlayState}" Value="Fading">
                                            <Setter Property="Source" Value="/TAS.Client.Common;component/Images/PlayStates/Fading.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PlayState}" Value="Scheduled">
                                            <Setter Property="Source" Value="{x:Null}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                    <StackPanel Grid.Column="4" Grid.RowSpan="2">
                        <TextBlock Text="{Binding ScheduledTime}" FontWeight="SemiBold" />
                        <TextBlock Text="{Binding Offset, Converter={StaticResource TimeSpanToSignedString}}" FontWeight="SemiBold" Foreground="DarkGreen" Visibility="{Binding OffsetVisible, Converter={StaticResource BoolToVis}}" />
                        <TextBlock Text="{Binding Duration}" FontWeight="SemiBold" />
                        <TextBlock Text="{Binding EndTime}" Visibility="{Binding IsLoop, Converter={StaticResource InvertedBoolToVis}}"  FontWeight="Bold" />
                        <Image Height="14" Source="/TAS.Client.Common;component/Images/Indicators/loop.png" Stretch="Uniform" Visibility="{Binding IsLoop, Converter={StaticResource BoolToVis}}" />
                    </StackPanel>
                    <TextBlock Grid.Column="5" Grid.Row="0" Text="{Binding EventName}" FontSize="22" VerticalAlignment="Center" Margin="5, 0">
                        <TextBlock.ToolTip>
                            <TextBlock Text="{Binding RootOwnerName, StringFormat={Resx _eventName.ToolTip, ResxName=TAS.Client.Views.EventPanelView}}" />
                        </TextBlock.ToolTip>
                    </TextBlock>
                    <TextBlock Grid.Column="6" Text="{Binding TimeLeft}" FontSize="26" VerticalAlignment="Center" Margin="5, 0" />
                </Grid>
            </StackPanel>
        </StackPanel>
    </Border>
</local:EventPanelView>
