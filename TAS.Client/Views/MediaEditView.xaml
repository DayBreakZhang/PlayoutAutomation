<UserControl ResxExtension.DefaultResxName="TAS.Client.Views.MediaEditView" Language="{UICulture}"
             x:Class="TAS.Client.MediaEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:vm="clr-namespace:TAS.Client.ViewModels"
             xmlns:views="clr-namespace:TAS.Client.Views"
             xmlns:client="clr-namespace:TAS.Client"
             xmlns:common="clr-namespace:TAS.Client.Common;assembly=TAS.Client.Common"
             mc:Ignorable="d"
             d:DataContext="{x:Type vm:MediaEditViewmodel}"
             d:DesignWidth="300"
             >
    <UserControl.InputBindings>
        <KeyBinding Command="{Binding CommandSaveEdit}" Gesture="Ctrl+S" />
    </UserControl.InputBindings>
    <UserControl.Resources>
        <common:TimeSpanToSMPTEConverter x:Key="TimeSpanToSMPTE" />
    </UserControl.Resources>
    <DockPanel MinWidth="200" >
        <StackPanel DockPanel.Dock="Top" Visibility="{Binding ShowButtons, Converter={StaticResource BoolToVis}}" FlowDirection="RightToLeft" Orientation="Horizontal" Height="37">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="Width" Value="80" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="FlowDirection" Value="LeftToRight"/>
                </Style>
                <Style TargetType="Label">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>
                <Style TargetType="Image" >
                    <Setter Property="Margin" Value="5, 0"/>
                </Style>
            </StackPanel.Resources>
            <Button IsDefault="True" ToolTip="{Resx _buttonSave.ToolTip}" Command="{Binding CommandSaveEdit}" >
                <DockPanel>
                    <common:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/apply.png"/>
                    <Label Content="{Resx _buttonSave.Caption}" />
                </DockPanel>
            </Button>
            <Button IsCancel="True" ToolTip="{Resx _buttonCancel.ToolTip}" Command="{Binding CommandCancelEdit}">
                <DockPanel>
                    <common:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/undo.png"/>
                    <Label Content="{Resx _buttonRevert.Caption}" />
                </DockPanel>
            </Button>
        </StackPanel>
        <ScrollViewer DockPanel.Dock="Top" VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="Label">
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="HorizontalContentAlignment" Value="Right" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Width" Value="120" />
                    </Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Margin" Value="5, 3" />
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="common:TimecodeEdit" >
                        <Setter Property="Margin" Value="5, 3" />
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Margin" Value="103, 2, 2, 2" />
                        <Setter Property="Padding" Value="8, 0"/>
                    </Style>
                    <Style TargetType="ComboBox" >
                        <Setter Property="Margin" Value="5, 3" />
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
                <DockPanel>
                    <Label Content="{Resx _clipName}"/>
                    <TextBox Text="{Binding MediaName, UpdateSourceTrigger=PropertyChanged}" />
                </DockPanel>
                <DockPanel>
                    <Label Content="{Resx _fileName}" />
                    <TextBox Text="{Binding FileName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />
                </DockPanel>
                <DockPanel Visibility="{Binding IsIngestDataShown, Converter={StaticResource BoolToVis}}" >
                    <Label Content="{Resx _ingestTime}" />
                    <TextBox IsReadOnly="True" Text="{Binding LastUpdated, Mode=OneWay, StringFormat=g}" />
                </DockPanel>
                <DockPanel>
                    <Label Content="{Resx _videoFormat}" />
                    <ComboBox  ItemsSource="{Binding VideoFormats}" SelectedValue="{Binding VideoFormat}" />
                </DockPanel>
                <StackPanel Visibility="{Binding IsMovie, Converter={StaticResource BoolToVis}}">
                    <CheckBox Visibility="{Binding IsInterlaced, Converter={StaticResource BoolToVis}}" IsChecked="{Binding FieldOrderInverted}" Content="{Resx _fieldOrderInverted}" ToolTip="{Resx _fieldOrderInverted.ToolTip}"/>
                    <DockPanel >
                        <Label Content="{Resx _times}"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="{Resx _clip}" Width="Auto"/>
                            <DockPanel Grid.Column="1">
                                <Label HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" Content="{Resx _play}" Width="Auto" />
                            </DockPanel>
                        </Grid>
                    </DockPanel>
                    <DockPanel >
                        <Label Content="{Resx _tCStart}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <common:TimecodeEdit Text="{Binding TcStart, Converter={StaticResource TimeSpanToSMPTE}, UpdateSourceTrigger=PropertyChanged}" />
                            <common:TimecodeEdit Grid.Column="1" Text="{Binding TcPlay, Converter={StaticResource TimeSpanToSMPTE}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        </Grid>
                    </DockPanel>
                    <DockPanel>
                        <Label Content="{Resx _duration}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <common:TimecodeEdit Text="{Binding Duration, Converter={StaticResource TimeSpanToSMPTE}, UpdateSourceTrigger=PropertyChanged}" />
                            <common:TimecodeEdit Grid.Column="1" Text="{Binding DurationPlay, Converter={StaticResource TimeSpanToSMPTE}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        </Grid>
                    </DockPanel>
                    <!--<DockPanel Visibility="{Binding IsIngestDataShown, Converter={StaticResource BoolToVis}}">
                <Label Style="{StaticResource fieldNameLabels}" Content="Ostatnio użyty" />
                <TextBox IsReadOnly="True" Text="{Binding LastAccess, Mode=OneWay, Converter={StaticResource DateTimeToString}, ConverterParameter=g}" />
            </DockPanel>-->
                    <DockPanel Visibility="Collapsed">
                        <Label Content="{Resx _audioChannelMappings}" />
                        <ComboBox ItemsSource="{Binding AudioChannelMappings}" SelectedValue="{Binding AudioChannelMapping}" />
                    </DockPanel>
                    <DockPanel>
                        <Label Content="{Resx _category}" />
                        <ComboBox ItemsSource="{Binding MediaCategories}" SelectedValue="{Binding MediaCategory}" >
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="12" Style="{StaticResource MediaCategoryImage}"/>
                                        <TextBlock Margin="2, 0, 0, 0" Text="{Binding}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </DockPanel>
                    <DockPanel Visibility="{Binding IsPersistentMedia, Converter={StaticResource BoolToVis}}">
                        <Label Content="{Resx _emphasis}" />
                        <ComboBox ItemsSource="{Binding MediaEmphasises}" SelectedValue="{Binding MediaEmphasis}" >
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ComboBoxItem}">
                                    <Setter Property="Background" Value="{Binding Converter={StaticResource MediaEmphasisToBrush}}" />
                                </Style>
                            </ComboBox.ItemContainerStyle>
                        </ComboBox>
                    </DockPanel>
                    <DockPanel>
                        <Label Content="{Resx _parental}" />
                        <ComboBox ItemsSource="{Binding Parentals}" SelectedValue="{Binding Parental}" />
                    </DockPanel>
                    <DockPanel>
                        <Label  Content="{Resx _audioVolume}" />
                        <Button Height="21" Margin="0, 0, 5, 0" DockPanel.Dock="Right" ToolTip="{Resx _checkVolume.ToolTip}" Command="{Binding CommandCheckVolume}">
                            <common:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/volume-measure.png" />
                        </Button>
                        <Label Width="Auto" DockPanel.Dock="Right" VerticalContentAlignment="Center" Content="dB" />
                        <TextBox DockPanel.Dock="Right" Margin="4" Width="40" Text="{Binding AudioVolume, StringFormat={}{0:0.0}}" />
                        <Slider  Margin="2" Minimum="-18" Maximum="18" Value="{Binding AudioVolume}"/>
                    </DockPanel>
                </StackPanel>
                <!--<DockPanel Visibility="{Binding IsPersistentMedia, Converter={StaticResource BoolToVis}}">
                <Label Content="Usuń po" Target="{Binding ElementName=edKillDate}" />
                <Grid Style="{StaticResource gridDetail}" HorizontalAlignment="Stretch">
                    <CheckBox VerticalAlignment ="Center" HorizontalAlignment="Left" Padding="0" IsChecked="{Binding IsKillDate}" />
                    <DatePicker Name="edKillDate"  Margin="30, 0, 0, 0" SelectedDate="{Binding KillDate}" HorizontalAlignment="Stretch"/>
                </Grid>
            </DockPanel>
            <DockPanel Visibility="{Binding IsServerMedia, Converter={StaticResource BoolToVis}}">
                <Label Content="Nie archiwizuj" />
                <CheckBox VerticalAlignment ="Center" IsChecked="{Binding DoNotArchive}" Margin="10, 3"/>
            </DockPanel>-->
                <DockPanel Visibility="{Binding IsPersistentMedia, Converter={StaticResource BoolToVis}}">
                    <Label Content="{Resx _externalId}" />
                    <TextBox Text="{Binding IdAux, UpdateSourceTrigger=PropertyChanged}" />
                </DockPanel>
                <DockPanel>
                    <Label Content="{Resx _status}" />
                    <DockPanel >
                        <Button DockPanel.Dock="Right" Margin="5, 0" Padding="0" Height="21" Command="{Binding CommandRefreshStatus}" ToolTip="{Resx _checkStatus.ToolTip}" >
                            <common:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/view-refresh.png" />
                        </Button>
                        <TextBox FlowDirection="LeftToRight" Background="#F0F0F0" Text="{Binding MediaStatus, Mode=OneWay}" IsReadOnly="True" />
                    </DockPanel>
                </DockPanel>
                <CheckBox Content="{Resx _protect}" Visibility="{Binding IsPersistentMedia, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Protected}" />
                <DockPanel>
                    <Label Content="{Resx _mediaType}" />
                    <TextBox Background="#F0F0F0" Text="{Binding MediaType, Mode=OneWay}" IsReadOnly="True" />
                </DockPanel>
                <DockPanel>
                    <Label Content="{Resx _mediaGuid}" />
                    <TextBox Background="#F0F0F0" Text="{Binding MediaGuid, Mode=OneWay}" IsReadOnly="True" />
                </DockPanel>
            </StackPanel>
        </ScrollViewer>
        <views:TemplatedEditView MinHeight="100" Visibility="{Binding IsAnimatedMedia, Converter={StaticResource BoolToVis}}"/>
    </DockPanel>
</UserControl>
