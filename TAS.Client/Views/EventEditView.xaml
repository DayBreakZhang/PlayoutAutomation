<UserControl ResxExtension.DefaultResxName="TAS.Client.Views.EventEditView" Language="{UICulture}" 
             x:Class="TAS.Client.EventEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:client="clr-namespace:TAS.Client"
             xmlns:common="clr-namespace:TAS.Client.Common;assembly=TAS.Client.Common"
             xmlns:vm="clr-namespace:TAS.Client.ViewModels"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DataContext="{x:Type vm:EventEditViewmodel}"
             d:DesignWidth="360"
             >
    <UserControl.Resources>
        <common:TimeSpanToSMPTEConverter x:Key="TimeSpanToSMPTE" />
        <common:DateTimeToSMPTEConverter x:Key="DateTimeToSMPTE" />
        <common:TimeSpanToFramesConverter x:Key="TimeSpanToFrames"/>
        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self}, 
                       Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Command="{Binding CommandSaveEdit}" Gesture="Ctrl+S" />
        <KeyBinding Command="{Binding CommandCancelEdit}" Gesture="Ctrl+U" />
        <KeyBinding Command="{Binding CommandDelete}" Gesture="Ctrl+Del" />
    </UserControl.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="36" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" >
            <Grid.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="3"/>
                </Style>
            </Grid.Resources>
            <StackPanel FlowDirection="RightToLeft" Orientation="Horizontal" Height="37">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="5" />
                        <Setter Property="Width" Value="80" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="FlowDirection" Value="LeftToRight"/>
                    </Style>
                    <Style TargetType="Label">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="0"/>
                    </Style>
                    <Style TargetType="Image" >
                        <Setter Property="Margin" Value="5, 0"/>
                    </Style>
                </StackPanel.Resources>
                <Button IsDefault="True" ToolTip="{Resx _buttonSave.ToolTip}" Command="{Binding CommandSaveEdit}" >
                    <DockPanel>
                        <common:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/apply.png"/>
                        <Label Content="{Resx _buttonSave.Caption}" />
                    </DockPanel>
                </Button>
                <Button IsCancel="True" ToolTip="{Resx _buttonCancel.ToolTip}" Command="{Binding CommandCancelEdit}">
                    <DockPanel>
                        <common:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/undo.png"/>
                        <Label Content="{Resx _buttonRevert.Caption}" />
                    </DockPanel>
                </Button>
            </StackPanel>
        </Grid>
        <ScrollViewer Grid.Row="1" Padding="2" VerticalScrollBarVisibility="Auto" >
            <ScrollViewer.Resources>
                <Style TargetType="Label">
                    <Setter Property="Width" Value="88"/>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Width" Value="97"/>
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="Padding" Value="2,1"/>
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Height" Value="20"/>
                </Style>
                <Style TargetType="common:DelayedBindingTextBox" >
                    <Setter Property="Margin" Value="1"/>
                </Style>
                <Style TargetType="TextBox" >
                    <Setter Property="Margin" Value="1"/>
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="Width" Value="75"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="10, 3, 3, 0"/>
                </Style>
            </ScrollViewer.Resources>

            <StackPanel Grid.Row="2" IsEnabled="{Binding IsEditEnabled}">
                <DockPanel>
                    <Label Content="{Resx _eventType}"/>
                    <TextBox Name="EventType"  Text="{Binding EventType}" IsEnabled="False" />
                </DockPanel>
                <DockPanel>
                    <Label Content="{Resx _name}"/>
                    <TextBox Name="EventName" Text="{Binding EventName, UpdateSourceTrigger=PropertyChanged}" />
                </DockPanel>
                <StackPanel Visibility="{Binding IsNotContainer, Converter={StaticResource BoolToVis}}" >
                    <DockPanel>
                        <CheckBox Content="{Resx _starting}" IsChecked="{Binding IsEnabled}" HorizontalContentAlignment="Right" VerticalAlignment="Center" ToolTip="{Resx _starting.ToolTip}" />
                        <TextBox Text="{Binding StartType}" IsEnabled="False" />
                    </DockPanel>
                    <DockPanel>
                        <Label/>
                        <TextBox Text="{Binding BoundEventName, Mode=OneWay}" IsReadOnly="True" Background="#F0F0F0"/>
                    </DockPanel>
                    <DockPanel>
                        <Label/>
                        <CheckBox Content="{Resx _hold}" IsChecked="{Binding IsHold}" IsEnabled="{Binding CanHold}" ToolTip="{Resx _hold.ToolTip}"  Margin="1,3" Width="100"/>
                        <!--<CheckBox Content="{Resx _loop}" IsChecked="{Binding IsLoop}" IsEnabled="{Binding CanLoop}"/>-->
                    </DockPanel>
                    <DockPanel>
                        <Label Content="{Resx _scheduledTime}" />
                        <common:DelayedBindingTextBox Text="{Binding ScheduledTime, Converter={StaticResource DateTimeToSMPTE}, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding IsScheduledTimeEnabled}" />
                    </DockPanel>
                    <DockPanel>
                        <Label Content="{Resx _requiredAt}" />
                        <common:DelayedBindingTextBox Text="{Binding RequestedStartTime, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus, TargetNullValue=''}" ToolTip="{Resx _requiredAt.ToolTip}"/>
                    </DockPanel>
                    <DockPanel>
                        <Label Content="{Resx _duration}" />
                        <Button DockPanel.Dock="Right" HorizontalAlignment="Right" ToolTip="{Resx _duration.GetTcInTcOut.ToolTip}" Command="{Binding CommandGetTCInTCOut}" >
                            <common:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/copy-small.png" />
                        </Button>
                        <common:DelayedBindingTextBox Text="{Binding Duration, Converter={StaticResource TimeSpanToSMPTE}, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding IsDurationEnabled}" />
                    </DockPanel>
                    <DockPanel Visibility="{Binding IsMovie, Converter={StaticResource BoolToVis}}">
                        <Label Content="{Resx _scheduledTC}" />
                        <common:DelayedBindingTextBox Text="{Binding ScheduledTc, Converter={StaticResource TimeSpanToSMPTE}, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}"/>
                    </DockPanel>
                    <DockPanel>
                        <Label Content="{Resx _clip}" />
                        <Button DockPanel.Dock="Right" ToolTip="{Resx _changeMovie.ToolTip}" Command="{Binding CommandChangeMovie}">
                            <common:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/select.png" />
                        </Button>
                        <Button DockPanel.Dock="Right" ToolTip="{Resx _editMovie.ToolTip}" Command="{Binding CommandEditMovie}">
                            <common:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/edit.png" />
                        </Button>
                        <TextBox Text="{Binding Media.FileName, Mode=OneWay}" IsReadOnly="True" VerticalContentAlignment="Center" Background="#F0F0F0" />
                    </DockPanel>
                    <StackPanel Visibility="{Binding IsMovieOrLive, Converter={StaticResource BoolToVis}}" >
                        <DockPanel>
                            <Label Content="{Resx _transitionType}" />
                            <ComboBox ItemsSource="{Binding TransitionTypes}" SelectedValue="{Binding TransitionType}" />
                            <Label Content="{Resx _transitionLength}" />
                            <common:DelayedBindingTextBox Text="{Binding TransitionTime, Converter={StaticResource TimeSpanToFrames}, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" />
                        </DockPanel>
                        <DockPanel>
                            <CheckBox Content="{Resx _audioVolume}" HorizontalContentAlignment="Right" IsChecked="{Binding HasAudioVolume}" ToolTip="{Resx _audioVolume.ToolTip}" />
                            <Button DockPanel.Dock="Right" ToolTip="{Resx _checkVolume.ToolTip}" Command="{Binding CommandCheckVolume}">
                                <common:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/volume-measure.png" />
                            </Button>
                            <Label DockPanel.Dock="Right" VerticalAlignment="Center" Content="dB" Width="25" />
                            <TextBox DockPanel.Dock="Right" Grid.Column="2" Width="40" Text="{Binding AudioVolumeLevel, StringFormat={}{0:0.0}, UpdateSourceTrigger=LostFocus}"/>
                            <Slider  VerticalAlignment="Stretch" Margin="5, 0" Minimum="-18" Maximum="18" Value="{Binding AudioVolumeLevel}"/>
                        </DockPanel>
                        <Grid Visibility="{Binding IsGPIEnabled, Converter={StaticResource BoolToVis}}" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="59*"/>
                                <ColumnDefinition Width="280*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Visibility="{Binding GPICanTrigger, Converter={StaticResource BoolToVis}}" Grid.ColumnSpan="2">
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="{Resx _gpiLogo}" />
                                    <ComboBox ItemsSource="{Binding GPILogos}" SelectedValue="{Binding GPILogo}"/>
                                    <Label Content="{Resx _gpiCrawl}" Width="44"/>
                                    <ComboBox ItemsSource="{Binding GPICrawls}" SelectedValue="{Binding GPICrawl}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="{Resx _gpiParental}"/>
                                    <ComboBox ItemsSource="{Binding GPIParentals}" SelectedValue="{Binding GPIParental}" />
                                </StackPanel>
                            </StackPanel>
                            <CheckBox Content="GPI" IsChecked="{Binding GPICanTrigger}" VerticalAlignment="Top" Margin="10,3,0,0" Grid.ColumnSpan="2" />
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
