<UserControl ResxExtension.DefaultResxName="TAS.Client.Views.EventEditView" Language="{UICulture}" 
             x:Class="TAS.Client.Views.EventEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:TAS.Client.Common.Controls;assembly=TAS.Client.Common"
             xmlns:vm="clr-namespace:TAS.Client.ViewModels"
             xmlns:views="clr-namespace:TAS.Client.Views"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance vm:EventEditViewmodel, IsDesignTimeCreatable=False}"
             d:DesignWidth="360"
             BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey }}"
             >
    <DockPanel>
        <Grid DockPanel.Dock="Top" Height="37">
            <Grid.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="5"/>
                </Style>
                <Style TargetType="Image" >
                    <Setter Property="Margin" Value="5, 0"/>
                </Style>
            </Grid.Resources>
            <StackPanel Orientation="Horizontal">
                <Button ToolTip="{Resx _moveUp.ToolTip}" Command="{Binding CommandMoveUp}" >
                    <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/go-up.png" />
                </Button>
                <Button ToolTip="{Resx _moveDown.ToolTip}" Command="{Binding CommandMoveDown}">
                    <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/go-down.png" />
                </Button>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5, 2"/>
                <Button ToolTip="{Resx _delete.ToolTip}" Command="{Binding CommandDelete}">
                    <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/delete.png" />
                </Button>

            </StackPanel>
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" >
                <Button IsCancel="True" ToolTip="{Resx _buttonCancel.ToolTip}" Command="{Binding CommandUndoEdit}" Style="{StaticResource UndoButtonStyle}"/>
                <Button IsDefault="True" ToolTip="{Resx _buttonSave.ToolTip}" Command="{Binding CommandSaveEdit}" Style="{StaticResource OkButtonStyle}" />
            </StackPanel>
        </Grid>
        <ScrollViewer Padding="2" VerticalScrollBarVisibility="Auto" >
            <ScrollViewer.Resources>
                <Style TargetType="Label">
                    <Setter Property="Width" Value="88"/>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Width" Value="97"/>
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="Padding" Value="2,1"/>
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Height" Value="20"/>
                </Style>
                <Style TargetType="controls:TimecodeEdit">
                    <Setter Property="Margin" Value="1"/>
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={RelativeSource Self}, 
                                    Path=(Validation.Errors)/ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="TextBox" >
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Trigger.Setters>
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)/ErrorContent}"/>
                            </Trigger.Setters>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="Width" Value="75"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="10, 3, 3, 0"/>
                </Style>
            </ScrollViewer.Resources>
            <DockPanel IsEnabled="{Binding IsEditEnabled}">
                <DockPanel DockPanel.Dock="Top">
                    <Label Content="{Resx _eventType}"/>
                    <TextBox Name="EventType"  Text="{Binding EventType}" IsEnabled="False" />
                </DockPanel>
                <DockPanel DockPanel.Dock="Top">
                    <Label Content="{Resx _name}"/>
                    <TextBox Name="EventName" Text="{Binding EventName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                </DockPanel>
                <Grid >
                    <DockPanel Visibility="{Binding IsContainer, Converter={StaticResource InvertedBoolToVis}}">
                        <DockPanel DockPanel.Dock="Top">
                            <CheckBox Content="{Resx _starting}" IsChecked="{Binding IsEnabled}" HorizontalContentAlignment="Right" VerticalAlignment="Center" ToolTip="{Resx _starting.ToolTip}" />
                            <Button DockPanel.Dock="Right" Visibility="{Binding IsStartEvent, Converter={StaticResource BoolToVis}}" Command="{Binding CommandTriggerStartType}" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">
                                <Image>
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding StartType}" Value="Manual">
                                                    <Setter Property="Source" Value="/TAS.Client.Common;component/Images/EventActions/clock-play.png"/>
                                                    <Setter Property="ToolTip" Value="{Resx _setStartTypeToFixedTime.ToolTip, ResxName=TAS.Client.Views.EventEditView}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding StartType}" Value="OnFixedTime">
                                                    <Setter Property="Source" Value="/TAS.Client.Common;component/Images/EventActions/clock-stop.png"/>
                                                    <Setter Property="ToolTip" Value="{Resx _setStartTypeToManual.ToolTip, ResxName=TAS.Client.Views.EventEditView}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                            <TextBox Text="{Binding StartType}" IsEnabled="False" />
                        </DockPanel>
                        <DockPanel DockPanel.Dock="Top" Visibility="{Binding IsStartEvent, Converter={StaticResource InvertedBoolToVis}}">
                            <Label/>
                            <TextBox Text="{Binding BoundEventName, Mode=OneWay}" IsReadOnly="True" Background="#F0F0F0"/>
                        </DockPanel>
                        <Grid DockPanel.Dock="Top" Visibility="{Binding IsAutoStartEvent, Converter={StaticResource BoolToVis}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Autostart"/>
                            <CheckBox Grid.Column="1" Content="{Resx _autoStartForced}" ToolTip="{Resx _autoStartForced.ToolTip}" IsChecked="{Binding AutoStartForced}" Margin="1,3" Width="110"/>
                            <CheckBox Grid.Column="2" Content="{Resx _autoStartEveryday}" IsChecked="{Binding AutoStartDaily}" Margin="1,3" Width="Auto" />
                        </Grid>
                        <Grid DockPanel.Dock="Top" Visibility="{Binding IsMovieOrLiveOrRundown, Converter={StaticResource BoolToVis}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label/>
                            <CheckBox Grid.Column="1" Content="{Resx _hold}" IsChecked="{Binding IsHold}" IsEnabled="{Binding CanHold}" ToolTip="{Resx _hold.ToolTip}"  Margin="1,3" Width="110"/>
                            <CheckBox Grid.Column="2" Content="{Resx _loop}" IsChecked="{Binding IsLoop}" IsEnabled="{Binding CanLoop}" Margin="1,3" />
                        </Grid>
                        <DockPanel DockPanel.Dock="Top" Visibility="{Binding IsContainer, Converter={StaticResource InvertedBoolToVis}}">
                            <Label Content="{Resx _scheduledTime}" />
                            <StackPanel Orientation="Horizontal" IsEnabled="{Binding IsStartEvent}">
                                <TextBox Text="{Binding ScheduledDate, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, StringFormat=d}" Width="100" Visibility="{Binding IsScheduledDateVisible, Converter={StaticResource BoolToVis}}"/>
                                <Label Content="{Resx _at}" Width="Auto"/>
                                <controls:TimecodeEdit Grid.Column="1" Timecode="{Binding ScheduledTimeOfDay, ValidatesOnDataErrors=True}" VideoFormat="{Binding VideoFormat}" />
                            </StackPanel>
                        </DockPanel>
                        <DockPanel DockPanel.Dock="Top" Visibility="{Binding IsMovieOrLiveOrRundown, Converter={StaticResource BoolToVis}}">
                            <Label Content="{Resx _requiredAt}" />
                            <xctk:MaskedTextBox AutoSelectBehavior="OnFocus" Text="{Binding RequestedStartTime, UpdateSourceTrigger=PropertyChanged}" Mask="00:00:00" ToolTip="{Resx _requiredAt.ToolTip}" Margin="1" />
                        </DockPanel>
                        <DockPanel DockPanel.Dock="Top" Visibility="{Binding IsMovie, Converter={StaticResource BoolToVis}}">
                            <Label Content="{Resx _clip}" />
                            <Button DockPanel.Dock="Right" ToolTip="{Resx _changeMovie.ToolTip}" Command="{Binding CommandChangeMovie}">
                                <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/select.png" />
                            </Button>
                            <Button DockPanel.Dock="Right" ToolTip="{Resx _editMovie.ToolTip}" Command="{Binding CommandEditMovie}">
                                <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/edit.png" />
                            </Button>
                            <TextBox Text="{Binding Media.FileName, Mode=OneWay}" IsReadOnly="True" VerticalContentAlignment="Center" Background="#F0F0F0" />
                        </DockPanel>
                        <StackPanel DockPanel.Dock="Top" Visibility="{Binding IsMovieOrLive, Converter={StaticResource BoolToVis}}" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <DockPanel>
                                    <Label Content="{Resx _duration}" />
                                    <controls:TimecodeEdit Timecode="{Binding Duration, ValidatesOnDataErrors=True}" VideoFormat="{Binding VideoFormat}" IsEnabled="{Binding IsDurationEnabled}" Height="21" VerticalAlignment="Top" />
                                </DockPanel>
                                <DockPanel Grid.Column="1" Visibility="{Binding IsMovie, Converter={StaticResource BoolToVis}}">
                                    <Label Content="{Resx _scheduledTC}" />
                                    <controls:TimecodeEdit Timecode="{Binding ScheduledTc, ValidatesOnDataErrors=True}" VideoFormat="{Binding VideoFormat}" />
                                </DockPanel>
                            </Grid>
                            <DockPanel>
                                <Label Content="{Resx _transitionType}" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <ComboBox Width="Auto" ItemsSource="{Binding TransitionTypes}" SelectedValue="{Binding TransitionType}" />
                                    <Grid Grid.Column="1" Grid.ColumnSpan="2" Visibility="{Binding IsTransitionPropertiesVisible,Converter={StaticResource BoolToVis}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Label Width="Auto" Content="{Resx _easingType}"/>
                                        <ComboBox Grid.Column="1" Width="Auto" ItemsSource="{Binding TransitionEasings}" SelectedValue="{Binding TransitionEasing}"/>
                                    </Grid>
                                </Grid>
                            </DockPanel>
                            <DockPanel Visibility="{Binding IsTransitionPropertiesVisible,Converter={StaticResource BoolToVis}}">
                                <Label Content="{Resx _transitionLength}" ToolTip="{Resx _transitionLength.ToolTip}" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <controls:FrameEdit Timecode="{Binding TransitionTime, ValidatesOnDataErrors=True}" VideoFormat="{Binding VideoFormat}" />
                                    <Label Grid.Column="1"  Width="Auto" Content="{Resx _transitionPauseLength}" ToolTip="{Resx _transitionPauseLength.ToolTip}" />
                                    <controls:FrameEdit Grid.Column="2" Timecode="{Binding TransitionPauseTime, ValidatesOnDataErrors=True}" VideoFormat="{Binding VideoFormat}" />
                                </Grid>
                            </DockPanel>
                            <DockPanel>
                                <CheckBox Content="{Resx _audioVolume}" HorizontalContentAlignment="Right" IsChecked="{Binding HasAudioVolume}" ToolTip="{Resx _audioVolume.ToolTip}" />
                                <Button DockPanel.Dock="Right" ToolTip="{Resx _checkVolume.ToolTip}" Command="{Binding CommandCheckVolume}">
                                    <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/volume-measure.png" />
                                </Button>
                                <Label DockPanel.Dock="Right" VerticalAlignment="Center" Content="dB" Width="25" />
                                <TextBox DockPanel.Dock="Right" Grid.Column="2" Width="40" Text="{Binding AudioVolumeLevel, StringFormat={}{0:0.0}, UpdateSourceTrigger=LostFocus}"/>
                                <Slider  VerticalAlignment="Stretch" Margin="5, 0" Minimum="-18" Maximum="18" Value="{Binding AudioVolumeLevel}"/>
                            </DockPanel>
                            <Grid Visibility="{Binding IsDisplayCGElements, Converter={StaticResource BoolToVis}}" >
                                <UniformGrid Columns="2" Visibility="{Binding IsCGEnabled, Converter={StaticResource BoolToVis}}">
                                    <DockPanel Visibility="{Binding Logos.Length, Converter={StaticResource ZeroToVis}}" >
                                        <Label Content="{Resx _gpiLogo}" />
                                        <ComboBox ItemsSource="{Binding Logos}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding Logo}" Width="Auto"/>
                                    </DockPanel>
                                    <DockPanel Visibility="{Binding Crawls.Length, Converter={StaticResource ZeroToVis}}" >
                                        <Label Content="{Resx _gpiCrawl}" Width="44"/>
                                        <ComboBox ItemsSource="{Binding Crawls}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding Crawl}" Width="Auto"/>
                                    </DockPanel>
                                    <DockPanel Visibility="{Binding Parentals.Length, Converter={StaticResource ZeroToVis}}" >
                                        <Label Content="{Resx _gpiParental}"/>
                                        <ComboBox ItemsSource="{Binding Parentals}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding Parental}" Width="Auto"/>
                                    </DockPanel>
                                </UniformGrid>
                                <CheckBox Content="CG" IsChecked="{Binding IsCGEnabled}" VerticalAlignment="Top" Margin="10,5,0,0" />
                            </Grid>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsLive}" Value="True" />
                                                <Condition Binding="{Binding Router, Converter={StaticResource NullToVis}}" Value="Visible" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Margin="5" Text="{Resx _inputPort}" VerticalAlignment="Center" />
                            <ComboBox ItemsSource="{Binding InputPorts}" DisplayMemberPath="PortName" SelectedItem="{Binding SelectedInputPort}">
                                <ComboBox.Style>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Setter Property="MinWidth" Value="100" />
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding InputPorts}" Value="{x:Null}">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                        </StackPanel>
                        <Grid DockPanel.Dock="Top" Visibility="{Binding IsStillImage, Converter={StaticResource BoolToVis}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Resx _duration}" />
                            <controls:TimecodeEdit Grid.Column="1" Timecode="{Binding Duration}" VideoFormat="{Binding VideoFormat}" IsEnabled="{Binding IsDurationEnabled}"  />
                        </Grid>
                        <DockPanel DockPanel.Dock="Top" Visibility="{Binding IsDisplayBindToEnd, Converter={StaticResource BoolToVis}}">
                            <Label DockPanel.Dock="Left" Content="{Resx _scheduledDelay}" />
                            <CheckBox DockPanel.Dock="Right" Content="{Resx _fromEnd}" IsChecked="{Binding BindToEnd}" />
                            <controls:TimecodeEdit Timecode="{Binding ScheduledDelay}" VideoFormat="{Binding VideoFormat}" />
                        </DockPanel>
                        <DockPanel DockPanel.Dock="Top" Visibility="{Binding IsCommandScript, Converter={StaticResource BoolToVis}}">
                            <Label Content="{Resx _command}" />
                            <TextBox Text="{Binding Command, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Resx _command.ToolTip}"/>
                        </DockPanel>
                        <ContentControl Content="{Binding TemplatedEditViewmodel}">
                            <ContentControl.Resources>
                                <DataTemplate DataType="{x:Type vm:TemplatedEditViewmodel}">
                                    <views:TemplatedEditView />
                                </DataTemplate>
                            </ContentControl.Resources>
                        </ContentControl>
                    </DockPanel>
                    <ContentControl Visibility="{Binding IsContainer, Converter={StaticResource BoolToVis}}" Content="{Binding EventRightsEditViewmodel}">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type vm:EventRightsEditViewmodel}">
                                <views:EventRightsEditView/>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </Grid>
            </DockPanel>
        </ScrollViewer>
    </DockPanel>
</UserControl>
