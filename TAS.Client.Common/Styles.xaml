<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
    <Style TargetType="Border" x:Key="EventPanelStyle">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#30E0E0E0" Offset="0.0"/>
                    <GradientStop Color="#20404040" Offset="0.5"/>
                    <GradientStop Color="#30E0E0E0" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0, 0, 0, 1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderBrush" Value="Gray"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="EventPanelTextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>
    <Style TargetType="Image" x:Key="EventPanelImage">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="EventPanelCommandButton" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}}"/>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>
    <Style TargetType="Border" x:Key="EventPanelIsHoldBorder">
        <Setter Property="Height" Value="6"/>
        <Setter Property="Visibility" Value="{Binding IsHold, Converter={StaticResource BoolToVis}}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                <Setter Property="Background" Value="OrangeRed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                <Setter Property="Background" Value="DimGray"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Border" x:Key="EventPanelIsStartBorder">
        <Setter Property="Background" Value="#FFEBBDA0"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Visibility" Value="{Binding IsStartEvent,  Converter={StaticResource BoolToVis}}"/>
        <Setter Property="Padding" Value="50, 0"/>
    </Style>
</ResourceDictionary>
